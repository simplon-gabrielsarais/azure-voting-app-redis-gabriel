# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'kuber'
    namespace: 'qal'
    command: 'get'
    arguments: 'deployments'
    outputFormat: 'json'
  name: "kube"

steps:
- task: CmdLine@2
  inputs:
    script: |
      versionold=$(echo $KUBE_KUBECTLOUTPUT | jq '.items[1].spec.template.spec.containers[].image' | cut -d: -f2 | sed 's/"//')
      versionnew=$(cat azure-vote/main.py | grep -E "^ver = \"[0-9.]+\"\$"|awk -F\" {'print $2'})
      echo "##vso[task.setvariable variable=vernew]$versionnew"
      sed -i 's/{{ version }}/'$ver'/g' kube_brief6/voteapp.yml

- task: Docker@2
  condition: ne(variables['verold'],variables['vernew'])
  inputs:
    containerRegistry: 'voteapp_Brief8_GS'
    repository: 'grabibel/voteapp_brief8_gs'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: $(vernew)

- task: KubernetesManifest@0
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'connexion'
    namespace: 'qal'
    manifests: '/kube_brief6/*'

